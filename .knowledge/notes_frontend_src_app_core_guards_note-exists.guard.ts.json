{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular route guard 'NoteExistsGuard' that checks if a note with a given ID exists before activating a route. It injects the NotesService to verify existence and navigates to '/notes' if the note does not exist.", "external_files": ["../services/notes.service"], "external_methods": ["NotesService.exists", "Router.navigate"], "published": ["NoteExistsGuard"], "classes": [], "methods": [{"name": "NoteExistsGuard", "description": "A route guard function that checks the existence of a note based on route parameters."}], "calls": ["inject", "notes.exists", "router.navigate"], "search-terms": ["Angular route guard", "NoteExistsGuard", "NotesService.exists", "guard route activation", "notes existence check"], "state": 2, "file_id": 35, "knowledge_revision": 76, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteExistsGuard", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/guards/note-exists.guard.ts", "pattern": "/^export const NoteExistsGuard: CanActivateFn = (route: ActivatedRouteSnapshot) => {$/", "language": "TypeScript", "kind": "constant"}], "hash": "85561db0db40475cbe14ffde69aaf3dc", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/core/guards/note-exists.guard.ts", "revision_history": [{"76": ""}]}