{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class 'NotesService' responsible for managing a collection of notes. It provides methods to create, read, update, delete, and search notes, utilizing RxJS for reactive data flows and local storage for persistence.", "external_files": ["../models/note.model", "./storage.service", "../utils/id.util"], "external_methods": ["storage.get", "storage.set", "generateId"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "An injectable Angular service for managing notes with reactive updates and persistence."}], "methods": [{"name": "private loadInitial(): Note[] { loadInitial", "description": "Loads initial notes from storage, creates a default welcome note if none exist.", "scope": "NotesService", "scopeKind": "class"}, {"name": "getAll(): Observable<Note[]> { getAll", "description": "Returns an observable of all notes, sorted by most recently updated.", "scope": "NotesService", "scopeKind": "class"}, {"name": "getById(id: string): Observable<Note | undefined> { getById", "description": "Retrieves a note by id as an observable.", "scope": "NotesService", "scopeKind": "class"}, {"name": "create(partial?: Partial<Note>): Note { create", "description": "Creates a new note with optional initial data and adds it to the collection.", "scope": "NotesService", "scopeKind": "class"}, {"name": "update(id: string, changes: Partial<Note>): void { update", "description": "Updates fields of an existing note identified by id.", "scope": "NotesService", "scopeKind": "class"}, {"name": "delete", "description": "Removes a note from the collection by id."}, {"name": "search", "description": "Performs a simple search in note titles and content, returning matching notes."}, {"name": "exists", "description": "Checks if a note with a given id exists in the collection."}, {"name": "private readonly notes$ = new BehaviorSubject<Note[]>(this.loadInitial()); this", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.storage.get", "this.storage.set", "generateId()", "this.notes$.subscribe", "this.notes$.next", "map"], "search-terms": ["Angular NotesService", "Reactive Notes Management", "Local Storage Notes", "Observable Notes", "ID Utility", "Notes CRUD"], "state": 2, "file_id": 30, "knowledge_revision": 66, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^const STORAGE_KEY = 'smart-notes-v1';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  create(partial?: Partial<Note>): Note {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const data = this.storage.get<Note[]>(STORAGE_KEY, []);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.loadInitial", "scopeKind": "method"}, {"_type": "tag", "name": "getAll", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  getAll(): Observable<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getById", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  getById(id: string): Observable<Note | undefined> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "initial", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^      const initial: Note[] = [{$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.loadInitial", "scopeKind": "method"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const list = [note, ...this.notes$.value];$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const list = this.notes$.value.filter(n => n.id !== id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const list = this.notes$.value.map(n => {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.update", "scopeKind": "method"}, {"_type": "tag", "name": "loadInitial", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  private loadInitial(): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "notes$", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  private readonly notes$ = new BehaviorSubject<Note[]>(this.loadInitial());$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^      const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.loadInitial", "scopeKind": "method"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^    const q = term.trim().toLowerCase();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  private readonly notes$ = new BehaviorSubject<Note[]>(this.loadInitial());$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/smart-notes-organizer-178488-178532/notes_frontend/src/app/core/services/notes.service.ts", "pattern": "/^  update(id: string, changes: Partial<Note>): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}], "hash": "bcb96865e21305755b051eae8ca2c270", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/core/services/notes.service.ts", "fields": [{"name": "private readonly notes$ = new BehaviorSubject<Note[]>(this.loadInitial());", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"66": ""}]}